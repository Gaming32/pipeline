memberSearchIndex = [{"p":"io.github.gaming32.pipeline.iterator","c":"IteratorPipeline","l":"allMatch(Predicate<E>)","u":"allMatch(java.util.function.Predicate)"},{"p":"io.github.gaming32.pipeline.iterator","c":"IteratorPipeline","l":"anyMatch(Predicate<E>)","u":"anyMatch(java.util.function.Predicate)"},{"p":"io.github.gaming32.pipeline.iterator.iterators","c":"ArrayIterator","l":"ArrayIterator(E[])","u":"%3Cinit%3E(E[])"},{"p":"io.github.gaming32.pipeline.iterator.iterators","c":"SizeEstimateIterator","l":"ARRAYLIST_ITERATOR"},{"p":"io.github.gaming32.pipeline.calling","c":"CallingPipeline","l":"call()"},{"p":"io.github.gaming32.pipeline","c":"Pipelines","l":"call(Callable<V>)","u":"call(java.util.concurrent.Callable)"},{"p":"io.github.gaming32.pipeline.calling","c":"CallingPipeline.OneArgCallable","l":"call(V)"},{"p":"io.github.gaming32.pipeline.calling","c":"CallingPipeline.OneArgNoReturnCallable","l":"call(V)"},{"p":"io.github.gaming32.pipeline.calling","c":"CallingPipeline.CallingState","l":"CANCELLED"},{"p":"io.github.gaming32.pipeline.unary","c":"UnaryPipeline","l":"choose(Predicate<T>, Function<T, R>, Function<T, R>)","u":"choose(java.util.function.Predicate,java.util.function.Function,java.util.function.Function)"},{"p":"io.github.gaming32.pipeline.unary","c":"UnaryPipeline","l":"choose(Predicate<T>, R, R)","u":"choose(java.util.function.Predicate,R,R)"},{"p":"io.github.gaming32.pipeline.unary","c":"UnaryPipeline","l":"choose(Predicate<T>, Supplier<R>, Supplier<R>)","u":"choose(java.util.function.Predicate,java.util.function.Supplier,java.util.function.Supplier)"},{"p":"io.github.gaming32.pipeline.unary","c":"UnaryPipeline","l":"choosePipeline(Predicate<T>, Function<UnaryPipeline<T>, R>, Function<UnaryPipeline<T>, R>)","u":"choosePipeline(java.util.function.Predicate,java.util.function.Function,java.util.function.Function)"},{"p":"io.github.gaming32.pipeline.iterator","c":"IteratorPipeline","l":"collect(Collector<? super E, A, R>)","u":"collect(java.util.stream.Collector)"},{"p":"io.github.gaming32.pipeline.iterator","c":"IteratorPipeline","l":"collect(Supplier<A>, BiConsumer<A, ? super E>, Function<A, R>)","u":"collect(java.util.function.Supplier,java.util.function.BiConsumer,java.util.function.Function)"},{"p":"io.github.gaming32.pipeline.iterator","c":"IteratorPipeline","l":"count()"},{"p":"io.github.gaming32.pipeline.iteratorbuilder","c":"IteratorBuilder","l":"create()"},{"p":"io.github.gaming32.pipeline.iterator","c":"IteratorPipeline","l":"distinct()"},{"p":"io.github.gaming32.pipeline.calling","c":"CallingPipeline.CallingState","l":"DONE"},{"p":"io.github.gaming32.pipeline.iteratorbuilder","c":"IteratorBuilder","l":"else_()"},{"p":"io.github.gaming32.pipeline.iteratorbuilder","c":"IteratorBuilder","l":"elseIf(BooleanSupplier)","u":"elseIf(java.util.function.BooleanSupplier)"},{"p":"io.github.gaming32.pipeline.iterator","c":"IteratorPipeline","l":"empty()"},{"p":"io.github.gaming32.pipeline.iteratorbuilder","c":"IteratorBuilder","l":"end()"},{"p":"io.github.gaming32.pipeline.iterator","c":"IteratorPipeline","l":"estimateSize()"},{"p":"io.github.gaming32.pipeline.iterator.iterators","c":"ArrayIterator","l":"estimateSize()"},{"p":"io.github.gaming32.pipeline.iterator.iterators","c":"FilteringIterator","l":"estimateSize()"},{"p":"io.github.gaming32.pipeline.iterator.iterators","c":"FlatMappingIterator","l":"estimateSize()"},{"p":"io.github.gaming32.pipeline.iterator.iterators","c":"LimitIterator","l":"estimateSize()"},{"p":"io.github.gaming32.pipeline.iterator.iterators","c":"MappingIterator","l":"estimateSize()"},{"p":"io.github.gaming32.pipeline.iterator.iterators","c":"MultiIterator","l":"estimateSize()"},{"p":"io.github.gaming32.pipeline.iterator.iterators","c":"PeekingIterator","l":"estimateSize()"},{"p":"io.github.gaming32.pipeline.iterator.iterators","c":"SizeEstimateIterator","l":"estimateSize()"},{"p":"io.github.gaming32.pipeline.iterator.iterators","c":"SkipIterator","l":"estimateSize()"},{"p":"io.github.gaming32.pipeline.iterator.iterators","c":"SizeEstimateIterator","l":"estimateSize(Iterator<E>)","u":"estimateSize(java.util.Iterator)"},{"p":"io.github.gaming32.pipeline.calling","c":"CallingPipeline.CallingState","l":"EXCEPTIONAL"},{"p":"io.github.gaming32.pipeline.iterator","c":"IteratorPipeline","l":"filter(Predicate<E>)","u":"filter(java.util.function.Predicate)"},{"p":"io.github.gaming32.pipeline.iterator.iterators","c":"FilteringIterator","l":"FilteringIterator(Iterator<E>, Predicate<E>)","u":"%3Cinit%3E(java.util.Iterator,java.util.function.Predicate)"},{"p":"io.github.gaming32.pipeline.iterator","c":"IteratorPipeline","l":"flatMap(Function<? super E, ? extends Iterator<R>>)","u":"flatMap(java.util.function.Function)"},{"p":"io.github.gaming32.pipeline.iterator.iterators","c":"FlatMappingIterator","l":"FlatMappingIterator(Iterator<E>, Function<? super E, ? extends Iterator<R>>)","u":"%3Cinit%3E(java.util.Iterator,java.util.function.Function)"},{"p":"io.github.gaming32.pipeline.iteratorbuilder","c":"IteratorBuilder","l":"for_(Runnable, BooleanSupplier, Runnable)","u":"for_(java.lang.Runnable,java.util.function.BooleanSupplier,java.lang.Runnable)"},{"p":"io.github.gaming32.pipeline.iteratorbuilder","c":"IteratorBuilder","l":"forEach(Consumer<T>, Iterable<T>)","u":"forEach(java.util.function.Consumer,java.lang.Iterable)"},{"p":"io.github.gaming32.pipeline.iteratorbuilder","c":"IteratorBuilder","l":"forEach(Consumer<T>, IteratorBuilder.ArraySupplier<T>)","u":"forEach(java.util.function.Consumer,io.github.gaming32.pipeline.iteratorbuilder.IteratorBuilder.ArraySupplier)"},{"p":"io.github.gaming32.pipeline.iteratorbuilder","c":"IteratorBuilder","l":"forEach(Consumer<T>, Supplier<Iterable<T>>)","u":"forEach(java.util.function.Consumer,java.util.function.Supplier)"},{"p":"io.github.gaming32.pipeline.iteratorbuilder","c":"ForEachStatement","l":"ForEachStatement(Consumer<T>, Iterable<T>, StatementList<E>)","u":"%3Cinit%3E(java.util.function.Consumer,java.lang.Iterable,io.github.gaming32.pipeline.iteratorbuilder.StatementList)"},{"p":"io.github.gaming32.pipeline.iteratorbuilder","c":"ForStatement","l":"ForStatement(Runnable, BooleanSupplier, Runnable, StatementList<E>)","u":"%3Cinit%3E(java.lang.Runnable,java.util.function.BooleanSupplier,java.lang.Runnable,io.github.gaming32.pipeline.iteratorbuilder.StatementList)"},{"p":"io.github.gaming32.pipeline.calling","c":"CallingPipeline","l":"get()"},{"p":"io.github.gaming32.pipeline.iteratorbuilder","c":"IteratorBuilder.ArraySupplier","l":"get()"},{"p":"io.github.gaming32.pipeline.unary","c":"UnaryPipeline","l":"get()"},{"p":"io.github.gaming32.pipeline.calling","c":"CallingPipeline","l":"getState()"},{"p":"io.github.gaming32.pipeline.calling","c":"CallingPipeline","l":"getUnchecked()"},{"p":"io.github.gaming32.pipeline.iterator.iterators","c":"SizeEstimateIterator","l":"HASHMAP_ITERATOR"},{"p":"io.github.gaming32.pipeline.iterator.iterators","c":"ArrayIterator","l":"hasNext()"},{"p":"io.github.gaming32.pipeline.iterator.iterators","c":"FilteringIterator","l":"hasNext()"},{"p":"io.github.gaming32.pipeline.iterator.iterators","c":"FlatMappingIterator","l":"hasNext()"},{"p":"io.github.gaming32.pipeline.iterator.iterators","c":"LimitIterator","l":"hasNext()"},{"p":"io.github.gaming32.pipeline.iterator.iterators","c":"MappingIterator","l":"hasNext()"},{"p":"io.github.gaming32.pipeline.iterator.iterators","c":"MultiIterator","l":"hasNext()"},{"p":"io.github.gaming32.pipeline.iterator.iterators","c":"PeekingIterator","l":"hasNext()"},{"p":"io.github.gaming32.pipeline.iterator.iterators","c":"SkipIterator","l":"hasNext()"},{"p":"io.github.gaming32.pipeline.iteratorbuilder","c":"IteratorBuilder","l":"if_(BooleanSupplier)","u":"if_(java.util.function.BooleanSupplier)"},{"p":"io.github.gaming32.pipeline.calling","c":"CallingPipeline","l":"ifExceptional(BiPredicate<Exception, Object>)","u":"ifExceptional(java.util.function.BiPredicate)"},{"p":"io.github.gaming32.pipeline.calling","c":"CallingPipeline","l":"ifExceptionalPassive(BiConsumer<Exception, Object>)","u":"ifExceptionalPassive(java.util.function.BiConsumer)"},{"p":"io.github.gaming32.pipeline","c":"Pipelines","l":"iterator(E[])"},{"p":"io.github.gaming32.pipeline","c":"Pipelines","l":"iterator(Iterable<E>)","u":"iterator(java.lang.Iterable)"},{"p":"io.github.gaming32.pipeline","c":"Pipelines","l":"iterator(Iterator<E>)","u":"iterator(java.util.Iterator)"},{"p":"io.github.gaming32.pipeline","c":"Pipelines","l":"iterator(Stream<E>)","u":"iterator(java.util.stream.Stream)"},{"p":"io.github.gaming32.pipeline","c":"Pipelines","l":"iterators(E[]...)"},{"p":"io.github.gaming32.pipeline","c":"Pipelines","l":"iterators(Iterable<E>...)","u":"iterators(java.lang.Iterable...)"},{"p":"io.github.gaming32.pipeline","c":"Pipelines","l":"iterators(Iterator<E>...)","u":"iterators(java.util.Iterator...)"},{"p":"io.github.gaming32.pipeline","c":"Pipelines","l":"iterators(Stream<E>...)","u":"iterators(java.util.stream.Stream...)"},{"p":"io.github.gaming32.pipeline.calling","c":"CallingPipeline","l":"join()"},{"p":"io.github.gaming32.pipeline.iterator","c":"IteratorPipeline","l":"limit(long)"},{"p":"io.github.gaming32.pipeline.iterator.iterators","c":"LimitIterator","l":"LimitIterator(Iterator<E>, long)","u":"%3Cinit%3E(java.util.Iterator,long)"},{"p":"io.github.gaming32.pipeline.iterator","c":"IteratorPipeline","l":"map(Function<E, R>)","u":"map(java.util.function.Function)"},{"p":"io.github.gaming32.pipeline.iterator.iterators","c":"MappingIterator","l":"MappingIterator(Iterator<E>, Function<E, R>)","u":"%3Cinit%3E(java.util.Iterator,java.util.function.Function)"},{"p":"io.github.gaming32.pipeline.iterator","c":"IteratorPipeline","l":"multi(Iterator<E>...)","u":"multi(java.util.Iterator...)"},{"p":"io.github.gaming32.pipeline.iterator.iterators","c":"MultiIterator","l":"MultiIterator(Iterator<E>...)","u":"%3Cinit%3E(java.util.Iterator...)"},{"p":"io.github.gaming32.pipeline.iterator.iterators","c":"ArrayIterator","l":"next()"},{"p":"io.github.gaming32.pipeline.iterator.iterators","c":"FilteringIterator","l":"next()"},{"p":"io.github.gaming32.pipeline.iterator.iterators","c":"FlatMappingIterator","l":"next()"},{"p":"io.github.gaming32.pipeline.iterator.iterators","c":"LimitIterator","l":"next()"},{"p":"io.github.gaming32.pipeline.iterator.iterators","c":"MappingIterator","l":"next()"},{"p":"io.github.gaming32.pipeline.iterator.iterators","c":"MultiIterator","l":"next()"},{"p":"io.github.gaming32.pipeline.iterator.iterators","c":"PeekingIterator","l":"next()"},{"p":"io.github.gaming32.pipeline.iterator.iterators","c":"SkipIterator","l":"next()"},{"p":"io.github.gaming32.pipeline.iterator","c":"IteratorPipeline","l":"noneMatch(Predicate<E>)","u":"noneMatch(java.util.function.Predicate)"},{"p":"io.github.gaming32.pipeline.calling","c":"CallingPipeline.CallingState","l":"NOT_YET"},{"p":"io.github.gaming32.pipeline.calling","c":"CallingPipeline","l":"of(Callable<V>)","u":"of(java.util.concurrent.Callable)"},{"p":"io.github.gaming32.pipeline.iterator","c":"IteratorPipeline","l":"of(Iterable<E>)","u":"of(java.lang.Iterable)"},{"p":"io.github.gaming32.pipeline.iterator","c":"IteratorPipeline","l":"of(Iterator<E>)","u":"of(java.util.Iterator)"},{"p":"io.github.gaming32.pipeline.unary","c":"UnaryPipeline","l":"of(T)"},{"p":"io.github.gaming32.pipeline.unary","c":"UnaryPipeline","l":"oneElementIterator()"},{"p":"io.github.gaming32.pipeline.iterator","c":"IteratorPipeline","l":"peek(Consumer<E>)","u":"peek(java.util.function.Consumer)"},{"p":"io.github.gaming32.pipeline.iterator.iterators","c":"PeekingIterator","l":"PeekingIterator(Iterator<E>, Consumer<E>)","u":"%3Cinit%3E(java.util.Iterator,java.util.function.Consumer)"},{"p":"io.github.gaming32.pipeline.iterator","c":"IteratorPipeline","l":"pipelineForEach(Consumer<UnaryPipeline<E>>)","u":"pipelineForEach(java.util.function.Consumer)"},{"p":"io.github.gaming32.pipeline.iterator","c":"IteratorPipeline","l":"pipelineMap(Function<UnaryPipeline<E>, RP>)","u":"pipelineMap(java.util.function.Function)"},{"p":"io.github.gaming32.pipeline.unary","c":"UnaryPipeline","l":"replace(R)"},{"p":"io.github.gaming32.pipeline.iteratorbuilder","c":"IteratorBuilder","l":"run(Runnable)","u":"run(java.lang.Runnable)"},{"p":"io.github.gaming32.pipeline.iterator","c":"IteratorPipeline","l":"skip(long)"},{"p":"io.github.gaming32.pipeline.iterator.iterators","c":"SkipIterator","l":"SkipIterator(Iterator<E>, long)","u":"%3Cinit%3E(java.util.Iterator,long)"},{"p":"io.github.gaming32.pipeline.calling","c":"CallingPipeline","l":"then(CallingPipeline.OneArgCallable<V, R>)","u":"then(io.github.gaming32.pipeline.calling.CallingPipeline.OneArgCallable)"},{"p":"io.github.gaming32.pipeline.unary","c":"UnaryPipeline","l":"then(Function<T, R>)","u":"then(java.util.function.Function)"},{"p":"io.github.gaming32.pipeline.calling","c":"CallingPipeline","l":"thenPassive(CallingPipeline.OneArgNoReturnCallable<V>)","u":"thenPassive(io.github.gaming32.pipeline.calling.CallingPipeline.OneArgNoReturnCallable)"},{"p":"io.github.gaming32.pipeline.iterator","c":"IteratorPipeline","l":"toArray()"},{"p":"io.github.gaming32.pipeline.iterator","c":"IteratorPipeline","l":"toArray(int)"},{"p":"io.github.gaming32.pipeline.iterator.iterators","c":"ArrayIterator","l":"toString()"},{"p":"io.github.gaming32.pipeline.iterator.iterators","c":"FilteringIterator","l":"toString()"},{"p":"io.github.gaming32.pipeline.iterator.iterators","c":"FlatMappingIterator","l":"toString()"},{"p":"io.github.gaming32.pipeline.iterator.iterators","c":"LimitIterator","l":"toString()"},{"p":"io.github.gaming32.pipeline.iterator.iterators","c":"MappingIterator","l":"toString()"},{"p":"io.github.gaming32.pipeline.iterator.iterators","c":"MultiIterator","l":"toString()"},{"p":"io.github.gaming32.pipeline.iterator.iterators","c":"PeekingIterator","l":"toString()"},{"p":"io.github.gaming32.pipeline.iterator.iterators","c":"SkipIterator","l":"toString()"},{"p":"io.github.gaming32.pipeline","c":"Pipelines","l":"unary(T)"},{"p":"io.github.gaming32.pipeline.calling","c":"CallingPipeline.CallingState","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"io.github.gaming32.pipeline.calling","c":"CallingPipeline.CallingState","l":"values()"},{"p":"io.github.gaming32.pipeline.calling","c":"CallingPipeline.CallingState","l":"WAITING"},{"p":"io.github.gaming32.pipeline.iteratorbuilder","c":"IteratorBuilder","l":"while_(BooleanSupplier)","u":"while_(java.util.function.BooleanSupplier)"},{"p":"io.github.gaming32.pipeline.iteratorbuilder","c":"WhileStatement","l":"WhileStatement(BooleanSupplier, StatementList<E>)","u":"%3Cinit%3E(java.util.function.BooleanSupplier,io.github.gaming32.pipeline.iteratorbuilder.StatementList)"},{"p":"io.github.gaming32.pipeline.calling","c":"CallingPipeline","l":"withDefaultExecutor()"},{"p":"io.github.gaming32.pipeline.calling","c":"CallingPipeline","l":"withExecutor(ExecutorService)","u":"withExecutor(java.util.concurrent.ExecutorService)"},{"p":"io.github.gaming32.pipeline.iteratorbuilder","c":"IteratorBuilder","l":"yield(Supplier<E>)","u":"yield(java.util.function.Supplier)"},{"p":"io.github.gaming32.pipeline.iteratorbuilder","c":"IteratorBuilder","l":"yieldFrom(Iterable<E>)","u":"yieldFrom(java.lang.Iterable)"},{"p":"io.github.gaming32.pipeline.iteratorbuilder","c":"IteratorBuilder","l":"yieldFrom(IteratorBuilder.ArraySupplier<E>)","u":"yieldFrom(io.github.gaming32.pipeline.iteratorbuilder.IteratorBuilder.ArraySupplier)"},{"p":"io.github.gaming32.pipeline.iteratorbuilder","c":"IteratorBuilder","l":"yieldFrom(Supplier<Iterable<E>>)","u":"yieldFrom(java.util.function.Supplier)"},{"p":"io.github.gaming32.pipeline.iteratorbuilder","c":"YieldStatement","l":"YieldStatement(Supplier<E>)","u":"%3Cinit%3E(java.util.function.Supplier)"}];updateSearchResults();